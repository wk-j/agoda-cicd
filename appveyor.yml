version: '1.0.{build}'
image: Visual Studio 2017
branches:
  only:
  - master
init:
  # Good practise, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true
install:
  # Install repo specific stuff here
before_build:
  # Display .NET Core version
  - cmd: dotnet --version
  # Display minimal restore text
  - cmd: dotnet restore ./src/ReactApp/ReactApp.csproj --verbosity m
build_script:
  # output will be in ./src/bin/debug/netcoreapp1.1/publish
  - cmd: dotnet publish ./src/ReactApp/ReactApp.csproj
after_build:
  # For once the build has completed
artifacts:
 - path: './src/ReactApp/bin/Debug/netcoreapp2.1/publish'
   name: ReactApp
   type: WebDeployPackage
clone_depth: 1
test_script:
  - cmd: dotnet restore ./tests/ReactApp.Tests/ReactApp.Tests.csproj --verbosity m
  - cmd: dotnet test ./tests/ReactApp.Tests
  - ps: >-
      & $env:USERPROFILE\.nuget\packages\opencover\4.6.519\tools\OpenCover.Console.exe -register:user -oldStyle -target:"dotnet.exe" -targetargs:"test tests/ReactTests.csproj" -filter:"*" -output:"coverage.xml"
      choco install --no-progress codecov

      # codecov -f coverage.xml
      # if ( ( $env:APPVEYOR_REPO_BRANCH -Eq "master" ) -Or $env:APPVEYOR_PULL_REQUEST_NUMBER )
      # {
      #   dotnet "C:\ProgramData\chocolatey\lib\sonarscanner-msbuild-netcoreapp2.0\tools\SonarScanner.MSBuild.dll" end /d:sonar.login="$env:SonarKey"
      # }
on_finish :
  # any cleanup in here
deploy: off

notifications:
  - provider: GitHubPullRequest
    on_build_success: true
    on_build_failure: true
    on_build_status_changed: true

environment:
  codecov:
    secure: jRV7l+VKCGZuN2ZJ4Cu8/2h5JZHRPOdyODh/Mm1/GV9Lbs8lbS8paHmePjWTNuzv